<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tadej JaneÅ¾ - fedora</title><link href="http://tadej.ja.nez.si/" rel="alternate"></link><link href="http://tadej.ja.nez.si/feeds/tag-fedora.atom.xml" rel="self"></link><id>http://tadej.ja.nez.si/</id><updated>2017-08-27T15:51:00+02:00</updated><entry><title>Fedora EuroPython 2017 Attendee badge</title><link href="http://tadej.ja.nez.si/fedora-europython2017-attendee-badge.html" rel="alternate"></link><published>2017-08-27T15:51:00+02:00</published><updated>2017-08-27T15:51:00+02:00</updated><author><name>Tadej JaneÅ¾</name></author><id>tag:tadej.ja.nez.si,2017-08-27:/fedora-europython2017-attendee-badge.html</id><summary type="html">

&lt;p&gt;A little late, but no less cool, &lt;a href="https://badges.fedoraproject.org/badge/europython-2017-attendee"&gt;Fedora EuroPython 2017 Attendee badge&lt;/a&gt; is available
&lt;img align="absmiddle" alt="ðŸŽ‰" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/svg/1f389.svg" title=":tada:" width="20px"&gt;!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fedora EuroPython 2017 Attendee badge" src="http://tadej.ja.nez.si/images/fedora-europython2017-attendee-badge.svg"&gt;&lt;/p&gt;
</summary><content type="html">

&lt;p&gt;A little late, but no less cool, &lt;a href="https://badges.fedoraproject.org/badge/europython-2017-attendee"&gt;Fedora EuroPython 2017 Attendee badge&lt;/a&gt; is available
&lt;img align="absmiddle" alt="ðŸŽ‰" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/svg/1f389.svg" title=":tada:" width="20px"&gt;!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fedora EuroPython 2017 Attendee badge" src="http://tadej.ja.nez.si/images/fedora-europython2017-attendee-badge.svg"&gt;&lt;/p&gt;


&lt;p&gt;I've just been given the rights to award the badge, so if you attended &lt;a href="https://ep2017.europython.eu/en/"&gt;this
years EuroPython in Rimini&lt;/a&gt; and would like to
have this badge, please contact me and I'll be happy to award it to you.&lt;/p&gt;
&lt;p&gt;When you write to me, please don't forget to include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;your &lt;a href="https://admin.fedoraproject.org/accounts/"&gt;&lt;abbr title="Fedora Accounts System"&gt;FAS&lt;/abbr&gt;&lt;/a&gt; username,&lt;/li&gt;
&lt;li&gt;a proof that you attended the conference (e.g. a photo from the conference,
a photo of your conference badge, a link to your talk, ...).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, here is a photo of me and my pimped up conference badge &lt;img align="absmiddle" alt="ðŸ˜ƒ" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/svg/1f603.svg" title=":smiley:" width="20px"&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Me holding my EuroPython 2017 badge" src="http://tadej.ja.nez.si/images/europyhon2017-photo.jpg"&gt;&lt;/p&gt;
&lt;p&gt;And please share this information with other EuroPython 2017 attendees!&lt;/p&gt;</content><category term="fedora"></category><category term="python"></category><category term="badge"></category></entry><entry><title>Don't mix yum/dnf and pip for installation of system-wide Python packages</title><link href="http://tadej.ja.nez.si/dont-mix-yum-dnf-and-pip.html" rel="alternate"></link><published>2017-01-13T11:43:00+01:00</published><updated>2017-01-13T11:43:00+01:00</updated><author><name>Tadej JaneÅ¾</name></author><id>tag:tadej.ja.nez.si,2017-01-13:/dont-mix-yum-dnf-and-pip.html</id><summary type="html">

&lt;p&gt;Too many times I've seen people using a mix of &lt;a href="http://yum.baseurl.org/"&gt;yum&lt;/a&gt;/
&lt;a href="http://dnf.baseurl.org/"&gt;dnf&lt;/a&gt; and &lt;a href="https://pip.pypa.io/"&gt;pip&lt;/a&gt; for
installation of system-wide Python packages This causes &lt;a href="http://tadej.ja.nez.si/dont-mix-yum-dnf-and-pip.html#problems-with-mixing-yumdnf-and-pip"&gt;all sorts of problems
&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL; DR&lt;/strong&gt; &lt;em&gt;Install system-wide Python packages with yum/dnf and only use pip
inside a &lt;a href="https://virtualenv.pypa.io/"&gt;virtual environment&lt;/a&gt;. For an example,
see my &lt;a href="http://tadej.ja.nez.si/dont-mix-yum-dnf-and-pip.html#ansible-playbook-for-installation-of-packages-inside-a-virtual-environment"&gt;Ansible snippet below
&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;em&gt;Update (January 25, 2017): Updated &lt;a href="http://tadej.ja.nez.si/dont-mix-yum-dnf-and-pip.html#proper-way-to-to-use-pip-without-mixing-it-with-yumdnf"&gt;instructions on preparing the Python
virtual environment to work with setuptools 34+ on CentOS/RHEL 7&lt;/a&gt;.
Also updated &lt;a href="http://tadej.ja.nez.si/dont-mix-yum-dnf-and-pip.html#ansible-playbook-for-installation-of-packages-inside-a-virtual-environment"&gt;the Ansible playbook&lt;/a&gt;
to skip seperately updating pip and setuptools upon creation of a new virtual
environment on Fedora.&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;Too many times I've seen people using a mix of &lt;a href="http://yum.baseurl.org/"&gt;yum&lt;/a&gt;/
&lt;a href="http://dnf.baseurl.org/"&gt;dnf&lt;/a&gt; and &lt;a href="https://pip.pypa.io/"&gt;pip&lt;/a&gt; for
installation of system-wide Python packages This causes &lt;a href="http://tadej.ja.nez.si/dont-mix-yum-dnf-and-pip.html#problems-with-mixing-yumdnf-and-pip"&gt;all sorts of problems
&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL; DR&lt;/strong&gt; &lt;em&gt;Install system-wide Python packages with yum/dnf and only use pip
inside a &lt;a href="https://virtualenv.pypa.io/"&gt;virtual environment&lt;/a&gt;. For an example,
see my &lt;a href="http://tadej.ja.nez.si/dont-mix-yum-dnf-and-pip.html#ansible-playbook-for-installation-of-packages-inside-a-virtual-environment"&gt;Ansible snippet below
&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;


&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;I'll use &lt;a href="https://www.centos.org/"&gt;CentOS&lt;/a&gt; 7 for the examples, but the
concepts apply to all current &lt;a href="https://getfedora.org/"&gt;Fedora&lt;/a&gt; and
CentOS/&lt;a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux"&gt;RHEL&lt;/a&gt;
distributions.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="problems-with-mixing-yumdnf-and-pip"&gt;Problems with mixing yum/dnf and pip&lt;/h2&gt;
&lt;p&gt;People usually install the &lt;code&gt;python2-pip&lt;/code&gt; package to boot-strap installation of
pip on their systems:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum -y install epel-release
sudo yum -y install python2-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At the time of writing, this will install pip 8.1.2 on the system, while the
latest pip version is 9.0.1.
A user will soon notice that on each run of the &lt;code&gt;pip&lt;/code&gt; command the following
message is shown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;You are using pip version 8.1.2, however version 9.0.1 is available.
You should consider upgrading via the &amp;#39;pip install --upgrade pip&amp;#39; command.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Naively, he will upgrade pip with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install --upgrade pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which will replace the previous pip installation in system locations (e.g.
&lt;code&gt;/usr/bin&lt;/code&gt;, &lt;code&gt;/usr/lib/python2.7/site-packages/pip&lt;/code&gt;, ...) with the new pip
version.&lt;/p&gt;
&lt;p&gt;The problem is that this will leave &lt;a href="http://rpm.org/"&gt;RPM&lt;/a&gt; with no clue as to
what is going on. If you run &lt;code&gt;rpm --verify python2-pip&lt;/code&gt; it will show that
everything is broken:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;S.5....T.    /usr/bin/pip
S.5....T.    /usr/bin/pip2
S.5....T.    /usr/bin/pip2.7
missing     /usr/lib/python2.7/site-packages/pip-8.1.2-py2.7.egg-info
missing     /usr/lib/python2.7/site-packages/pip-8.1.2-py2.7.egg-info/PKG-INFO
missing     /usr/lib/python2.7/site-packages/pip-8.1.2-py2.7.egg-info/SOURCES.txt
missing     /usr/lib/python2.7/site-packages/pip-8.1.2-py2.7.egg-info/dependency_links.txt
missing     /usr/lib/python2.7/site-packages/pip-8.1.2-py2.7.egg-info/entry_points.txt
missing     /usr/lib/python2.7/site-packages/pip-8.1.2-py2.7.egg-info/not-zip-safe
missing     /usr/lib/python2.7/site-packages/pip-8.1.2-py2.7.egg-info/requires.txt
missing     /usr/lib/python2.7/site-packages/pip-8.1.2-py2.7.egg-info/top_level.txt
S.5....T.    /usr/lib/python2.7/site-packages/pip/__init__.py
S.5....T.    /usr/lib/python2.7/site-packages/pip/__init__.pyc
missing     /usr/lib/python2.7/site-packages/pip/__init__.pyo
.......T.    /usr/lib/python2.7/site-packages/pip/__main__.py
S.5....T.    /usr/lib/python2.7/site-packages/pip/__main__.pyc
missing     /usr/lib/python2.7/site-packages/pip/__main__.pyo

&lt;span class="o"&gt;[&lt;/span&gt; ... output trimmed ... &lt;span class="o"&gt;]&lt;/span&gt;

S.5....T.    /usr/lib/python2.7/site-packages/pip/vcs/subversion.py
S.5....T.    /usr/lib/python2.7/site-packages/pip/vcs/subversion.pyc
missing     /usr/lib/python2.7/site-packages/pip/vcs/subversion.pyo
S.5....T.    /usr/lib/python2.7/site-packages/pip/wheel.py
S.5....T.    /usr/lib/python2.7/site-packages/pip/wheel.pyc
missing     /usr/lib/python2.7/site-packages/pip/wheel.pyo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Furthermore, when a new version of the &lt;code&gt;python2-pip&lt;/code&gt; becomes available, yum
upgrade will complain about not being able to find some files and directories.&lt;/p&gt;
&lt;p&gt;For example, on upgrade from &lt;code&gt;python-pip-7.1.0-1.el7&lt;/code&gt; to
&lt;code&gt;python2-pip-8.1.2-5.el7&lt;/code&gt; when pip was upgraded with pip in-between, yum
upgrade gives the following warnings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;warning: file /usr/lib/python2.7/site-packages/pip/_vendor/_markerlib/markers.pyo: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip/_vendor/_markerlib/markers.pyc: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip/_vendor/_markerlib/markers.py: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip/_vendor/_markerlib/__init__.pyo: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip/_vendor/_markerlib/__init__.pyc: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip/_vendor/_markerlib/__init__.py: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip/_vendor/_markerlib: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip-7.1.0-py2.7.egg-info/top_level.txt: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip-7.1.0-py2.7.egg-info/requires.txt: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip-7.1.0-py2.7.egg-info/pbr.json: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip-7.1.0-py2.7.egg-info/not-zip-safe: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip-7.1.0-py2.7.egg-info/entry_points.txt: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip-7.1.0-py2.7.egg-info/dependency_links.txt: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip-7.1.0-py2.7.egg-info/SOURCES.txt: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip-7.1.0-py2.7.egg-info/PKG-INFO: remove failed: No such file or directory
warning: file /usr/lib/python2.7/site-packages/pip-7.1.0-py2.7.egg-info: remove failed: No such file or directory
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="proper-way-to-to-use-pip-without-mixing-it-with-yumdnf"&gt;Proper way to to use pip without mixing it with yum/dnf&lt;/h2&gt;
&lt;p&gt;The solution is to limit pip's use to installation of Python packages inside a
Python virtual environment.&lt;/p&gt;
&lt;p&gt;First install the &lt;code&gt;python-virtualenv&lt;/code&gt; package with yum/dnf:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum -y install python-virtualenv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then use it to create and activate a new virtual environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virtualenv myvenv
source myvenv/bin/activate
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;At the time of writing, CentOS/RHEL 7's system-installed virtualenv package
is very old (1.10.1) and creates a virtual environment with very old pip
(1.4.1) and &lt;a href="https://setuptools.readthedocs.io/"&gt;setuptools&lt;/a&gt; (0.9.8)
packages. Hence, it is recommended to update them separately, before
installation of other things in the virtual environment.&lt;/p&gt;
&lt;p&gt;Since &lt;a href="https://setuptools.readthedocs.io/en/latest/history.html#v34-0-0"&gt;setuptools version 34&lt;/a&gt;,
setuptools package no longer bundles its requirements and relies on
installing whell distributions of its requirements. To install these
wheels, it needs a newer version pip, hence pip needs to be updated
separately before setuptools:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install -U pip
pip install -U setuptools
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A complete Ansible playbook for proper creation of a Python virtual
environment is provided &lt;a href="http://tadej.ja.nez.si/dont-mix-yum-dnf-and-pip.html#ansible-playbook-for-installation-of-packages-inside-a-virtual-environment"&gt;later&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Then install whichever Python package you want inside the Python virtual
environment.&lt;/p&gt;
&lt;h3 id="tip-dont-install-the-system-pip-package"&gt;Tip: Don't install the system pip package&lt;/h3&gt;
&lt;p&gt;To avoid mistakenly using pip outside a virtual environment, don't install
the pip system package (e.g. &lt;code&gt;python2-pip&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This way, &lt;code&gt;pip&lt;/code&gt; executable will only be available after you activate the chosen
virtual environment, which limits mistakes with using the system-wide pip to
the minimum.&lt;/p&gt;
&lt;h2 id="ansible-playbook-for-installation-of-packages-inside-a-virtual-environment"&gt;Ansible playbook for installation of packages inside a virtual environment&lt;/h2&gt;
&lt;p&gt;If you need to automate installation of &lt;code&gt;python-virtualenv&lt;/code&gt; system package and
creation of a Python virtual environment for installation of project's
requirements inside this virtual environment, you can use the following
&lt;a href="https://www.ansible.com/"&gt;Ansible&lt;/a&gt; playbook:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Playbook for installation of packages inside a virtual environment&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;all&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;become&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;

  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;vars&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# adjust these variables to your project&amp;#39;s needs&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;venv_path&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/opt/myvenv/&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;requirements&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;requests&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;simplejson&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;six&lt;/span&gt;

  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Install python-virtualenv package&lt;/span&gt;
      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;package&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name=python-virtualenv state=installed&lt;/span&gt;

    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;block&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;

      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Create virtual environment with up-to-date pip&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pip&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;virtualenv&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;venv_path&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pip&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;state&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;latest&lt;/span&gt;

      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Update virtual environment&amp;#39;s setuptools&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pip&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;virtualenv&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;venv_path&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;setuptools&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;state&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;latest&lt;/span&gt;

      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;when&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ansible_distribution in [&amp;quot;CentOS&amp;quot;, &amp;quot;RedHat&amp;quot;]&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ansible_distribution_major_version | int == 7&lt;/span&gt;

    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Install project&amp;#39;s requirements in virtual environement&lt;/span&gt;
      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pip&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;virtualenv&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;venv_path&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;requirements&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;state&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;latest&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Due to a &lt;a href="https://github.com/ansible/ansible-modules-core/issues/5347"&gt;bug in Ansible's &lt;code&gt;pip&lt;/code&gt; module&lt;/a&gt; which causes
Ansible to use system-installed &lt;code&gt;pip2&lt;/code&gt; executable and ignore the &lt;code&gt;pip&lt;/code&gt;
executable installed inside the virtual environment, you must use at least
&lt;a href="https://releases.ansible.com/ansible/ansible-2.2.1.0-0.3.rc3.tar.gz"&gt;version 2.2.1 RC3&lt;/a&gt; which
fixes the bug.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Fedora comes with &lt;a href="https://apps.fedoraproject.org/packages/python-virtualenv"&gt;virtualenv 14.0.1+&lt;/a&gt; which
&lt;a href="http://virtualenv.readthedocs.io/en/stable/changes/#id11"&gt;automatically downloads new releases of pip, setuptools, wheel and their
requirements from PyPI&lt;/a&gt;, therefore there
is no need to update them separately before installing project's
requirements in virtual environment.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If your project's requirements are not pure Python packages, but also include
packages with &lt;a href="https://docs.python.org/3/extending/index.html"&gt;C/C++ extensions&lt;/a&gt;, they'll need to be built as
part of the installation process. Therefore, you'll need to have at least &lt;code&gt;gcc&lt;/code&gt;
and &lt;code&gt;python-devel&lt;/code&gt; packages installed. You can use the following Ansible task
to achieve that:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Install project&amp;#39;s building prerequisites&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;package&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name={{ item }} state=installed&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;with_items&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;gcc&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;python-devel&lt;/span&gt;
    &lt;span class="c1"&gt;# add other packages required to build your project&amp;#39;s requirements&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Put it before the &lt;em&gt;Install project's requirements in virtual environement&lt;/em&gt;
task.&lt;/p&gt;</content><category term="yum"></category><category term="dnf"></category><category term="pip"></category><category term="python"></category><category term="packaging"></category><category term="virtualenv"></category><category term="fedora"></category><category term="centos"></category><category term="rhel"></category></entry><entry><title>Setting up a Pelican site with Python 3 and Fabric on Fedora 24</title><link href="http://tadej.ja.nez.si/setting-up-pelican-site.html" rel="alternate"></link><published>2016-10-08T10:16:00+02:00</published><updated>2016-10-08T10:16:00+02:00</updated><author><name>Tadej JaneÅ¾</name></author><id>tag:tadej.ja.nez.si,2016-10-08:/setting-up-pelican-site.html</id><summary type="html">

&lt;p&gt;According to &lt;a href="https://www.staticgen.com/"&gt;StaticGen&lt;/a&gt;, &lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt; is the most popular static site generator written in
&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;. As of Oct 10, 2016 it has
&lt;a href="https://github.com/getpelican/pelican"&gt;6168 stars on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this blog post, I'll show you how to create your own Pelican site, track
it in a &lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt; repository, use &lt;a href="http://www.fabfile.org/"&gt;Fabric&lt;/a&gt; to administer it, change site's default theme and
finally, create a Hello World blog post.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;em&gt;Update (December 6, 2016): Newer Fedora Pelican packages (
&lt;a href="http://koji.fedoraproject.org/koji/search?terms=python-pelican-3.6.3-6.fc24&amp;amp;type=build&amp;amp;match=glob"&gt;3.6.3-6.fc24&lt;/a&gt;,
&lt;a href="http://koji.fedoraproject.org/koji/search?terms=python-pelican-3.6.3-6.fc25&amp;amp;type=build&amp;amp;match=glob"&gt;3.6.3-6.fc24&lt;/a&gt;,
&lt;a href="http://koji.fedoraproject.org/koji/search?terms=python-pelican-3.6.3-6.fc26&amp;amp;type=build&amp;amp;match=glob"&gt;3.6.3-6.fc26&lt;/a&gt;
) &lt;a href="https://pkgs.fedoraproject.org/cgit/rpms/python-pelican.git/commit/?id=998b43e24184da9293815a5b4e965d6d954cf1a2"&gt;changed naming of Python 3 Pelican executables&lt;/a&gt; from
&lt;code&gt;py3-&amp;lt;command&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;command&amp;gt;-3&lt;/code&gt; so make sure to update to the latest Fedora
Pelican packages and use the &lt;code&gt;&amp;lt;command&amp;gt;-3&lt;/code&gt; syntax.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update (October 19, 2016):
The &lt;a href="http://tadej.ja.nez.si/publishing-to-github-pages.html"&gt;follow-up blog post&lt;/a&gt; on
publishing your site to GitHub Pages with a sleek Fabric task has been
published.&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;According to &lt;a href="https://www.staticgen.com/"&gt;StaticGen&lt;/a&gt;, &lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt; is the most popular static site generator written in
&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;. As of Oct 10, 2016 it has
&lt;a href="https://github.com/getpelican/pelican"&gt;6168 stars on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this blog post, I'll show you how to create your own Pelican site, track
it in a &lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt; repository, use &lt;a href="http://www.fabfile.org/"&gt;Fabric&lt;/a&gt; to administer it, change site's default theme and
finally, create a Hello World blog post.&lt;/p&gt;


&lt;h2 id="installing-prerequisites"&gt;Installing prerequisites&lt;/h2&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;This example uses a vanilla &lt;a href="https://getfedora.org/en/cloud/"&gt;Fedora 24 Cloud&lt;/a&gt; system.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Install Pelican (Python 3 version), git and Fabric (unfortunately,
&lt;a href="http://fedora.portingdb.xyz/pkg/fabric/"&gt;only Python 2 version is currently available&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo dnf -y install python3-pelican git fabric
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="creating-a-git-repository-for-the-site"&gt;Creating a git repository for the site&lt;/h2&gt;
&lt;p&gt;Create a directory for the site:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir my-site
cd my-site
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To setup a Pelican skeleton for the site, run &lt;code&gt;pelican-quickstart-3&lt;/code&gt; and
answer the questions. If you are unsure, you can safely accept the default
answer.&lt;/p&gt;
&lt;p&gt;Before initializing the git repository, clean up the generated skeleton.
Remove the &lt;code&gt;Makefile&lt;/code&gt; and edit &lt;code&gt;fabfile.py&lt;/code&gt; to remove the unnecessary
functionality and make it work with Python 3 version of Pelican.&lt;/p&gt;
&lt;p&gt;All &lt;code&gt;pelican&lt;/code&gt; commands need to be replaced with &lt;code&gt;pelican-3&lt;/code&gt;. In addition,
the &lt;code&gt;serve()&lt;/code&gt; function needs to be rewritten since it tries to directly import
the Python 2 version of &lt;code&gt;pelican.server&lt;/code&gt; which is not available. You can also
safely remove the parts connected with Rackspace Cloud Files, rsync publishing
and &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; (I'll describe how to add support
for it in a follow-up blog post).&lt;/p&gt;
&lt;p&gt;The cleaned-up version of &lt;code&gt;fabfile.py&lt;/code&gt; should look something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fabric.api&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fabric.contrib.project&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;project&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;shutil&lt;/span&gt;

&lt;span class="c1"&gt;# Local path configuration (can be absolute or relative to fabfile)&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deploy_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;output&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Port for `serve`&lt;/span&gt;
&lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Remove generated files&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deploy_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rmtree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deploy_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deploy_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;build&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Build local version of site&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pelican-3 -s pelicanconf.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rebuild&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;`clean`, then `build`&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;regenerate&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Automatically regenerate site upon file modification&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pelican-3 -r -s pelicanconf.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Serve site at http://localhost:PORT/&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;lcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deploy_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;python3 -m pelican.server {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reserve&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;`build`, then `serve`&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;preview&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Build production version of site&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pelican-3 -s publishconf.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since we are using the Python 3 version of Pelican, we can remove the Python 2
compatibility headers from &lt;code&gt;pelicanconf.py&lt;/code&gt; and &lt;code&gt;publishconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In addition, remove the shebang from &lt;code&gt;publishconf.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Initialize the git repository and create the initial commit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git init
git add *.py
git commit -m &amp;quot;Initial site created with pelican-quickstart&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;If you use git for the first time, you must configure your git email and
user name with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global user.email &lt;span class="s2"&gt;&amp;quot;&amp;lt;your-email-address&amp;gt;&amp;quot;&lt;/span&gt;
git config --global user.name &lt;span class="s2"&gt;&amp;quot;&amp;lt;your-name&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;p&gt;To instruct git to ignore the generated Python byte-code and the generated
site, create &lt;code&gt;.gitignore&lt;/code&gt; file with the following contents:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# ignore Python byte-code
*.pyc

# ignore generated site
/output/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and commit it with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add .gitignore
git commit -m &amp;quot;Add .gitignore&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="administering-the-site-with-fabric"&gt;Administering the site with Fabric&lt;/h2&gt;
&lt;p&gt;Fabric is a Python library and a command-line tool for automating deployment
and system administration tasks. By default, it looks for a &lt;code&gt;fabfile.py&lt;/code&gt; file
where one can define Fabric's tasks. See the &lt;code&gt;fabfile.py&lt;/code&gt; code listing above
to get a glimpse of how Fabric tasks look like.&lt;/p&gt;
&lt;p&gt;To run Fabric tasks, just execute &lt;code&gt;fab&lt;/code&gt; followed by the task's name, e.g.
&lt;code&gt;serve&lt;/code&gt;. Here are a couple of tasks that you will typically use when
administering a site.&lt;/p&gt;
&lt;p&gt;To generate the site, use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fab build
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To serve the site locally on port 8080, use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fab serve
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To regenerate the site and serve it locally, use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fab reserve
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To automatically regenerate the site upon file modification and serve it
locally, run the following commands in two separate terminals:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fab regenerate
fab serve
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="changing-sites-default-theme"&gt;Changing site's default theme&lt;/h2&gt;
&lt;p&gt;Frankly speaking, the default Pelican theme looks dated nowadays, so you'll
want to change it sooner rather than later.
Take a look at the &lt;a href="http://www.pelicanthemes.com/"&gt;Pelican Themes site&lt;/a&gt; and
find a theme you like.&lt;/p&gt;
&lt;p&gt;After you decide which theme you'll use (in the example I'll use &lt;a href="https://github.com/alexandrevicenzi/Flex/"&gt;Alexandre
Vicenzi's Flex theme&lt;/a&gt;, which I use
for my Pelican site), add it to your git repo as a submodule:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git submodule add https://github.com/alexandrevicenzi/Flex.git Flex
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then configure it in &lt;code&gt;pelicanconf.py&lt;/code&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Each theme has its own configuration. Consult the chosen theme's
documentation on what you can configure.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here is an example configuration for the Flex theme:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hashlib&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="c1"&gt;# Theme&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Flex&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITETITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SITENAME&lt;/span&gt;
&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;My cool descrition&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;my.email@somedomain.com&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SITELOGO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://seccdn.libravatar.org/avatar/{}?s=256&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;copyright_year_start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;
&lt;span class="n"&gt;copyright_year_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;copyright_year_end&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;copyright_year_start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;COPYRIGHT_YEAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;copyright_year_start&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;COPYRIGHT_YEAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{}-{}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;copyright_year_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;copyright_year_end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;PYGMENTS_STYLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;native&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;In the example, I use &lt;a href="https://www.libravatar.org/"&gt;libravatar&lt;/a&gt;, a
federated open source avatar hosting service, for my site's logo.
To use it for your own site, &lt;a href="https://www.libravatar.org/account/new/"&gt;create an account&lt;/a&gt; with them.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Finally, commit the changes to git:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git commit -a -m &amp;quot;Use Flex theme&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="creating-a-hello-world-blog-post"&gt;Creating a Hello World blog post&lt;/h2&gt;
&lt;p&gt;To create your first blog post, create a Markdown file in the &lt;code&gt;content&lt;/code&gt;
directory with the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Hello&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Site&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Pelican&lt;/span&gt;&lt;span class="o"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getpelican&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/)&lt;/span&gt;
&lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Flex&lt;/span&gt;&lt;span class="o"&gt;](&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="sr"&gt;/alexandrevicenzi/Flex/&lt;/span&gt;&lt;span class="o"&gt;)!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Commit the changes to git with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add content/
git commit -m &amp;quot;Add Hello World blog post&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Preview the site with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fab reserve
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="next-steps"&gt;Next steps&lt;/h2&gt;
&lt;p&gt;You have successfully completed setting up a Pelican site. But the site doesn't
really serve its purpose if its only available on your local computer, does it?&lt;/p&gt;
&lt;p&gt;I plan to write a follow-up blog post that will show you how to publish your
site to &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; with a sleek Fabric task to
do it automatically. Stay tuned!&lt;/p&gt;
&lt;p&gt;Meanwhile, you can also browse the &lt;a href="https://github.com/tjanez/site"&gt;source repo of my Pelican site&lt;/a&gt;.&lt;/p&gt;</content><category term="pelican"></category><category term="fedora"></category><category term="python"></category><category term="fabric"></category><category term="site"></category></entry></feed>